//! `SeaORM` Entity. Generated by sea-orm-codegen 0.12.14

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "oauth2_refresh_tokens")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub refresh_token: String,
    pub access_token: String,
    pub expires_at: Option<DateTime>,
    pub revoked_at: Option<DateTime>,
    pub created_at: Option<DateTime>,
    pub updated_at: Option<DateTime>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::oauth2_tokens::Entity",
        from = "Column::AccessToken",
        to = "super::oauth2_tokens::Column::AccessToken",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    Oauth2Tokens,
}

impl Related<super::oauth2_tokens::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Oauth2Tokens.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
